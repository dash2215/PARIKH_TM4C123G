


ARM Macro Assembler    Page 1 


    1 00000000         ; InputOutput.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Test the GPIO initialization functions by setting the 
                       LED
    4 00000000         ; color according to the status of the switches.
    5 00000000         ; The Reflex Test (no longer supported; each LED turns o
                       thers off):
    6 00000000         ; This program is functionally similar to SwitchTestMain
                       .c
    7 00000000         ; in Switch_4F120asm.  When switch #1 is pressed, the bl
                       ue
    8 00000000         ; LED comes on.  When switch #2 is pressed, the red LED
    9 00000000         ; comes on.  When both switches are pressed, the green L
                       ED
   10 00000000         ; comes on.  A short delay is inserted between
   11 00000000         ; polls of the buttons to compensate for your reflexes a
                       nd
   12 00000000         ; the button bounce.  The following color combinations c
                       an
   13 00000000         ; be made:
   14 00000000         ; Color    LED(s) Illumination Method
   15 00000000         ; dark     ---    release both buttons
   16 00000000         ; red      R--    press right button (#2)
   17 00000000         ; blue     --B    press left button (#1)
   18 00000000         ; green    -G-    press both buttons exactly together
   19 00000000         ; yellow   RG-    press right button, then press left bu
                       tton
   20 00000000         ; sky blue -GB    press left button, then press right bu
                       tton
   21 00000000         ; white    RGB    press either button, then press the ot
                       her
   22 00000000         ;                 button, then release the first button
   23 00000000         ; pink     R-B    press either button, then release the
   24 00000000         ;                 first button and immediately press the
                       
   25 00000000         ;                 other button
   26 00000000         ; Daniel Valvano
   27 00000000         ; September 11, 2013
   28 00000000         
   29 00000000         ;  This example accompanies the book
   30 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   31 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   32 00000000         ;  Section 4.2    Program 4.1
   33 00000000         ;
   34 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   35 00000000         ;   You may use, edit, run or distribute this file
   36 00000000         ;   as long as the above copyright notice remains
   37 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   38 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   39 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   40 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   41 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.



ARM Macro Assembler    Page 2 


   42 00000000         ;For more information about my classes, my research, and
                        my books, see
   43 00000000         ;http://users.ece.utexas.edu/~valvano/
   44 00000000         
   45 00000000         ; negative logic switch #2 connected to PF0 on the Launc
                       hpad
   46 00000000         ; red LED connected to PF1 on the Launchpad
   47 00000000         ; blue LED connected to PF2 on the Launchpad
   48 00000000         ; green LED connected to PF3 on the Launchpad
   49 00000000         ; negative logic switch #1 connected to PF4 on the Launc
                       hpad
   50 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   51 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   52 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   53 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   54 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   55 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   56 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   57 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   58 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   59 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   60 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
   61 00000000         ; debugged or re-programmed.
   62 00000000         
   63 00000000         
   64 00000000         ;****************** main.s ***************
   65 00000000         ; Modified by: Darshil Parikh
   66 00000000         ; ECE505, W 2020, Experiment 2
   67 00000000         ; This file intializes Port D Pin 0 as output. 
   68 00000000         ; This file retains the LED functionality from the examp
                       le by Valvano.
   69 00000000         ; Left Button - 440 Hz
   70 00000000         ; Right Button - 494 Hz
   71 00000000         ; Both Button - 523 Hz
   72 00000000         ; Date: 02/07/2020
   73 00000000         ;*****************************************
   74 00000000         
   75 00000000         ; ~~Port F~~
   76 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   77 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   78 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   79 00000000 40025510 



ARM Macro Assembler    Page 3 


                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   80 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   81 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   82 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   83 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   84 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   85 00000000         
   86 00000000         ; ~~Pord D~~
   87 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   88 00000000 40007400 
                       GPIO_PORTD_DIR_R
                               EQU              0x40007400
   89 00000000 40007420 
                       GPIO_PORTD_AFSEL_R
                               EQU              0x40007420
   90 00000000 40007510 
                       GPIO_PORTD_PUR_R
                               EQU              0x40007510
   91 00000000 4000751C 
                       GPIO_PORTD_DEN_R
                               EQU              0x4000751C
   92 00000000 40007520 
                       GPIO_PORTD_LOCK_R
                               EQU              0x40007520
   93 00000000 40007524 
                       GPIO_PORTD_CR_R
                               EQU              0x40007524
   94 00000000 40007528 
                       GPIO_PORTD_AMSEL_R
                               EQU              0x40007528
   95 00000000 4000752C 
                       GPIO_PORTD_PCTL_R
                               EQU              0x4000752C
   96 00000000         
   97 00000000         
   98 00000000         
   99 00000000         
  100 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
  101 00000000 00000002 
                       RED     EQU              0x02
  102 00000000 00000004 
                       BLUE    EQU              0x04
  103 00000000 00000008 



ARM Macro Assembler    Page 4 


                       GREEN   EQU              0x08
  104 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
  105 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
  106 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
  107 00000000         
  108 00000000         
  109 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  110 00000000                 THUMB
  111 00000000                 EXPORT           Start
  112 00000000         
  113 00000000         Start
  114 00000000 F000 F836       BL               PortF_Init  ; initialize input 
                                                            and output pins of 
                                                            Port F
  115 00000004 F000 F863       BL               PortD_Init  ; initialize Port D
                                                             Pin 0 (PD0)
  116 00000008 F04F 0600       MOV              R6, #0x00
  117 0000000C         loop
  118 0000000C         ;    LDR R0, =FIFTHSEC               ; R0 = FIFTHSEC (de
                       lay 0.2 second)
  119 0000000C         ;    BL  delay                       ; delay at least (3
                       *R0) cycles
  120 0000000C F000 F857       BL               PortF_Input ; read all of the s
                                                            witches on Port F
  121 00000010 2801            CMP              R0, #0x01   ; R0 == 0x01?
  122 00000012 D00A            BEQ              sw1pressed  ; if so, switch 1 p
                                                            ressed
  123 00000014 2810            CMP              R0, #0x10   ; R0 == 0x10?
  124 00000016 D011            BEQ              sw2pressed  ; if so, switch 2 p
                                                            ressed
  125 00000018 2800            CMP              R0, #0x00   ; R0 == 0x00?
  126 0000001A D018            BEQ              bothpressed ; if so, both switc
                                                            hes pressed
  127 0000001C 2811            CMP              R0, #0x11   ; R0 == 0x11?
  128 0000001E D01F            BEQ              nopressed   ; if so, neither sw
                                                            itch pressed
  129 00000020         ; if none of the above, unexpected return value
  130 00000020 F04F 000E       MOV              R0, #(RED+GREEN+BLUE) ; R0 = (R
                                                            ED|GREEN|BLUE) (all
                                                             LEDs on)
  131 00000024 F000 F850       BL               PortF_Output ; turn all of the 
                                                            LEDs on
  132 00000028 E7F0            B                loop
  133 0000002A         sw1pressed
  134 0000002A F04F 0004       MOV              R0, #BLUE   ; R0 = BLUE (blue L
                                                            ED on)
  135 0000002E F000 F84B       BL               PortF_Output ; turn the blue LE
                                                            D on
  136 00000032 F642 7459       MOV              R4, #12121  ; 440 Hz for speake
                                                            r



ARM Macro Assembler    Page 5 


  137 00000036 F000 F883       BL               buzzer_pin_toggle_wPar ; PD0 ou
                                                            tput function
  138 0000003A E7E7            B                loop
  139 0000003C         sw2pressed
  140 0000003C F04F 0002       MOV              R0, #RED    ; R0 = RED (red LED
                                                             on)
  141 00000040 F000 F842       BL               PortF_Output ; turn the red LED
                                                             on
  142 00000044 F642 242C       MOV              R4, #10796  ; 494 Hz for speake
                                                            r
  143 00000048 F000 F87A       BL               buzzer_pin_toggle_wPar ; PD0 ou
                                                            tput function
  144 0000004C E7DE            B                loop
  145 0000004E         bothpressed
  146 0000004E F04F 0008       MOV              R0, #GREEN  ; R0 = GREEN (green
                                                             LED on)
  147 00000052 F000 F839       BL               PortF_Output ; turn the green L
                                                            ED on
  148 00000056 F242 74D5       MOV              R4, #10197  ; 523 Hz for speake
                                                            r
  149 0000005A F000 F871       BL               buzzer_pin_toggle_wPar ; PD0 ou
                                                            tput function
  150 0000005E E7D5            B                loop
  151 00000060         nopressed
  152 00000060 F04F 0000       MOV              R0, #0      ; R0 = 0 (no LEDs o
                                                            n)
  153 00000064 F000 F830       BL               PortF_Output ; turn all of the 
                                                            LEDs off
  154 00000068 E7D0            B                loop
  155 0000006A         
  156 0000006A         ;------------delay------------
  157 0000006A         ; Delay function for testing, which delays about 3*count
                        cycles.
  158 0000006A         ; Input: R0  count
  159 0000006A         ; Output: none
  160 0000006A 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
  161 0000006A 00145855 
                       QUARTERSEC
                               EQU              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
  162 0000006A 001046AA 
                       FIFTHSEC
                               EQU              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
  163 0000006A         delay
  164 0000006A 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  165 0000006C D1FD            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
  166 0000006E 4770            BX               LR          ; return
  167 00000070         
  168 00000070         
  169 00000070         ;------------PortF_Init------------
  170 00000070         ; Initialize GPIO Port F for negative logic switches on 



ARM Macro Assembler    Page 6 


                       PF0 and
  171 00000070         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  172 00000070         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  173 00000070         ; disabled.  Make the RGB LED's pins outputs.
  174 00000070         ; Input: none
  175 00000070         ; Output: none
  176 00000070         ; Modifies: R0, R1, R2
  177 00000070         PortF_Init
  178 00000070 493A            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  179 00000072 6808            LDR              R0, [R1]
  180 00000074 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  181 00000078 6008            STR              R0, [R1]
  182 0000007A BF00            NOP
  183 0000007C BF00            NOP                          ; allow time for cl
                                                            ock to finish
  184 0000007E 4938            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  185 00000080 4838            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  186 00000082 6008            STR              R0, [R1]
  187 00000084 4938            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  188 00000086 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  189 0000008A 6008            STR              R0, [R1]
  190 0000008C 4937            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  191 0000008E F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  192 00000092 6008            STR              R0, [R1]
  193 00000094 4936            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  194 00000096 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  195 0000009A 6008            STR              R0, [R1]
  196 0000009C 4935            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  197 0000009E F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  198 000000A2 6008            STR              R0, [R1]
  199 000000A4 4934            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  200 000000A6 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  201 000000AA 6008            STR              R0, [R1]
  202 000000AC 4933            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  203 000000AE F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4



ARM Macro Assembler    Page 7 


  204 000000B2 6008            STR              R0, [R1]
  205 000000B4 4932            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  206 000000B6 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
  207 000000BA 6008            STR              R0, [R1]
  208 000000BC 4770            BX               LR
  209 000000BE         
  210 000000BE         
  211 000000BE         ;------------PortF_Input------------
  212 000000BE         ; Read and return the status of the switches.
  213 000000BE         ; Input: none
  214 000000BE         ; Output: R0  0x01 if only Switch 1 is pressed
  215 000000BE         ;         R0  0x10 if only Switch 2 is pressed
  216 000000BE         ;         R0  0x00 if both switches are pressed
  217 000000BE         ;         R0  0x11 if no switches are pressed
  218 000000BE         ; Modifies: R1
  219 000000BE         PortF_Input
  220 000000BE 4931            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  221 000000C0 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  222 000000C2 F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  223 000000C6 4770            BX               LR          ; return R0 with in
                                                            puts
  224 000000C8         
  225 000000C8         ;------------PortF_Output------------
  226 000000C8         ; Set the output state of PF3-1.
  227 000000C8         ; Input: R0  new state of PF
  228 000000C8         ; Output: none
  229 000000C8         ; Modifies: R1
  230 000000C8         PortF_Output
  231 000000C8 492E            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  232 000000CA 6008            STR              R0, [R1]    ; write to PF3-1
  233 000000CC 4770            BX               LR
  234 000000CE         
  235 000000CE         
  236 000000CE         ;------------PortD_Init------------
  237 000000CE         ; Initialize GPIO Port D for GPIO PD0. Weak internal pul
                       l-up
  238 000000CE         ; resistors are enabled.
  239 000000CE         ; Input: none
  240 000000CE         ; Output: none
  241 000000CE         ; Modifies: R0, R1, R2
  242 000000CE         PortD_Init
  243 000000CE 4923            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t D
  244 000000D0 6808            LDR              R0, [R1]
  245 000000D2 F040 0008       ORR              R0, R0, #0x08 ; set bit 5 to tu
                                                            rn on clock for Por
                                                            t D
  246 000000D6 6008            STR              R0, [R1]
  247 000000D8 BF00            NOP
  248 000000DA BF00            NOP                          ; allow time for cl
                                                            ock to finish



ARM Macro Assembler    Page 8 


  249 000000DC 492A            LDR              R1, =GPIO_PORTD_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  250 000000DE 4821            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort D Commit Regist
                                                            er
  251 000000E0 6008            STR              R0, [R1]
  252 000000E2 492A            LDR              R1, =GPIO_PORTD_CR_R ; enable c
                                                            ommit for Port D
  253 000000E4 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  254 000000E8 6008            STR              R0, [R1]
  255 000000EA 4929            LDR              R1, =GPIO_PORTD_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  256 000000EC F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  257 000000F0 6008            STR              R0, [R1]
  258 000000F2 4928            LDR              R1, =GPIO_PORTD_PCTL_R ; 4) con
                                                            figure as GPIO
  259 000000F4 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port D as GPIO
                                                            
  260 000000F8 6008            STR              R0, [R1]
  261 000000FA 4927            LDR              R1, =GPIO_PORTD_DIR_R ; 5) set 
                                                            direction register
  262 000000FC F04F 0001       MOV              R0,#0x01    ; PD0 
  263 00000100 6008            STR              R0, [R1]
  264 00000102 4926            LDR              R1, =GPIO_PORTD_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  265 00000104 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  266 00000108 6008            STR              R0, [R1]
  267 0000010A 4925            LDR              R1, =GPIO_PORTD_PUR_R ; pull-up
                                                             resistors for PD0
  268 0000010C F04F 0001       MOV              R0, #0x01   ; enable weak 
  269 00000110 6008            STR              R0, [R1]
  270 00000112 4924            LDR              R1, =GPIO_PORTD_DEN_R ; 7) enab
                                                            le Port D digital p
                                                            ort
  271 00000114 F04F 0001       MOV              R0, #0x01   ; 1 means enable di
                                                            gital I/O
  272 00000118 6008            STR              R0, [R1]
  273 0000011A 4770            BX               LR
  274 0000011C         
  275 0000011C         ;------------buzzer_pin_toggle------------
  276 0000011C         ; Toggles output state of PD0 to high or low @ 4HZ.
  277 0000011C         ; Input: R0 new state of PD0, R3 frequency
  278 0000011C         ; Output: none
  279 0000011C         ; Modifies: R1
  280 0000011C         buzzer_pin_toggle
  281 0000011C B500            PUSH             {LR}        ; Push to save the 
                                                            current branch of t
                                                            he link register 
  282 0000011E F04F 0001       MOV              R0, #0x01   ; Turn ON PD0
  283 00000122 4921            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  284 00000124 6008            STR              R0, [R1]    ; write to PD0



ARM Macro Assembler    Page 9 


  285 00000126 4821            LDR              R0, =QUARTERSEC ; Toggle @ 4Hz
  286 00000128 F7FF FF9F       BL               delay       ; Branch to delay
  287 0000012C F04F 0000       MOV              R0, #0x00   ; Turn OFF PD0
  288 00000130 491D            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  289 00000132 6008            STR              R0, [R1]    ; write to PD0
  290 00000134 481D            LDR              R0, =QUARTERSEC ; Toggle @ 4Hz
  291 00000136 F7FF FF98       BL               delay       ; Branch to delay
  292 0000013A F85D EB04       POP              {LR}        ; POP the brach add
                                                            ress from memory
  293 0000013E 4770            BX               LR
  294 00000140         
  295 00000140         
  296 00000140         ;------------buzzer_pin_toggle_wPar------------
  297 00000140         ; Toggles output state of PD0 as per user provided param
                       ter 
  298 00000140         ; Input: R0 cycles
  299 00000140         ; Output: none
  300 00000140         ; Modifies: R1, R4, R5
  301 00000140         ;buzzer_pin_toggle_wPar
  302 00000140         ; PUSH {LR}     ; Save address of the main loop
  303 00000140         ; MOV R4, R0     ; Move user paramnter to R4 to for ON d
                       elay calculations
  304 00000140         ; MOV R5, R0     ; Move user paramnter to R5 to for OFF 
                       delay calculations
  305 00000140         ;My_turnON_delay_loop 
  306 00000140         ; MOV R0, #0x01    ; Turn ON PD0
  307 00000140         ;    LDR R1, =GPIO_PORTD_DATA_R  ; pointer to Port D dat
                       a
  308 00000140         ;    STR R0, [R1]                ; write to PD0
  309 00000140         ; BL delay     ; delay
  310 00000140         ; SUBS R4, #1     ; Counter decerment
  311 00000140         ; CMP R4, #0     ; Counter comparision
  312 00000140         ; BNE My_turnON_delay_loop
  313 00000140         ;My_turnOFF_delay_loop
  314 00000140         ; MOV R0, #0x00    ; Turn OFF PD0
  315 00000140         ;    LDR R1, =GPIO_PORTD_DATA_R  ; pointer to Port D dat
                       a
  316 00000140         ;    STR R0, [R1]                ; write to PD0 
  317 00000140         ; MOV R0, #0x01    ; R0 back to 1 to delay by 1 cycle
  318 00000140         ; BL delay     ; delay
  319 00000140         ; SUBS R5, #1     ; Counter decerment
  320 00000140         ; CMP R5, #0     ; Counter comparision
  321 00000140         ; BNE My_turnOFF_delay_loop
  322 00000140         ; POP {LR}
  323 00000140         ; BX LR      ; Back to main
  324 00000140         
  325 00000140         ;------------buzzer_pin_toggle_wPar------------
  326 00000140         ; Toggles output state of PD0 as per user provided param
                       ter 
  327 00000140         ; Input: R0 cycles
  328 00000140         ; Output: none
  329 00000140         ; Modifies: R0, R1, R6
  330 00000140         buzzer_pin_toggle_wPar
  331 00000140 B500            PUSH             {LR}        ; Save address of t
                                                            he main loop
  332 00000142 4919            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  333 00000144 F086 0601       EOR              R6, R6, #0x01 ; togglebit 1



ARM Macro Assembler    Page 10 


  334 00000148 600E            STR              R6,[R1]     ; update
  335 0000014A F04F 0001       MOV              R0, #0x01   ; R0 back to 1 to d
                                                            elay by 1 cycle
  336 0000014E F7FF FF8C       BL               delay       ; delay
  337 00000152 1E64            SUBS             R4, R4, #1  ; Counter decerment
                                                            
  338 00000154 F85D EB04       POP              {LR}
  339 00000158 D1F2            BNE              buzzer_pin_toggle_wPar
  340 0000015A 4770            BX               LR          ; Back to main
  341 0000015C         
  342 0000015C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  343 0000015C                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
              40007520 
              40007524 
              40007528 
              4000752C 
              40007400 
              40007420 
              40007510 
              4000751C 
              400073FC 
              00145855 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\_out\main.d -o.\_out\main.o -I.\RTE\_InputOutput -IC:\Keil_v5
\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\LM4F_DF
P\1.0.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 526" --predefine="_RTE_ SETA 1" --predefine="LM4F120 SETA 1" --list=.\m
ain.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 109 in file main.s
   Uses
      None
Comment: .text unused
PortD_Init 000000CE

Symbol: PortD_Init
   Definitions
      At line 242 in file main.s
   Uses
      At line 115 in file main.s
Comment: PortD_Init used once
PortF_Init 00000070

Symbol: PortF_Init
   Definitions
      At line 177 in file main.s
   Uses
      At line 114 in file main.s
Comment: PortF_Init used once
PortF_Input 000000BE

Symbol: PortF_Input
   Definitions
      At line 219 in file main.s
   Uses
      At line 120 in file main.s
Comment: PortF_Input used once
PortF_Output 000000C8

Symbol: PortF_Output
   Definitions
      At line 230 in file main.s
   Uses
      At line 131 in file main.s
      At line 135 in file main.s
      At line 141 in file main.s
      At line 147 in file main.s
      At line 153 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 113 in file main.s
   Uses
      At line 111 in file main.s
Comment: Start used once
bothpressed 0000004E

Symbol: bothpressed
   Definitions
      At line 145 in file main.s
   Uses
      At line 126 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: bothpressed used once
buzzer_pin_toggle 0000011C

Symbol: buzzer_pin_toggle
   Definitions
      At line 280 in file main.s
   Uses
      None
Comment: buzzer_pin_toggle unused
buzzer_pin_toggle_wPar 00000140

Symbol: buzzer_pin_toggle_wPar
   Definitions
      At line 330 in file main.s
   Uses
      At line 137 in file main.s
      At line 143 in file main.s
      At line 149 in file main.s
      At line 339 in file main.s

delay 0000006A

Symbol: delay
   Definitions
      At line 163 in file main.s
   Uses
      At line 165 in file main.s
      At line 286 in file main.s
      At line 291 in file main.s
      At line 336 in file main.s

loop 0000000C

Symbol: loop
   Definitions
      At line 117 in file main.s
   Uses
      At line 132 in file main.s
      At line 138 in file main.s
      At line 144 in file main.s
      At line 150 in file main.s
      At line 154 in file main.s

nopressed 00000060

Symbol: nopressed
   Definitions
      At line 151 in file main.s
   Uses
      At line 128 in file main.s
Comment: nopressed used once
sw1pressed 0000002A

Symbol: sw1pressed
   Definitions
      At line 133 in file main.s
   Uses
      At line 122 in file main.s
Comment: sw1pressed used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

sw2pressed 0000003C

Symbol: sw2pressed
   Definitions
      At line 139 in file main.s
   Uses
      At line 124 in file main.s
Comment: sw2pressed used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 102 in file main.s
   Uses
      At line 130 in file main.s
      At line 134 in file main.s

FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 162 in file main.s
   Uses
      None
Comment: FIFTHSEC unused
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 100 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTD_AFSEL_R 40007420

Symbol: GPIO_PORTD_AFSEL_R
   Definitions
      At line 89 in file main.s
   Uses
      At line 264 in file main.s
Comment: GPIO_PORTD_AFSEL_R used once
GPIO_PORTD_AMSEL_R 40007528

Symbol: GPIO_PORTD_AMSEL_R
   Definitions
      At line 94 in file main.s
   Uses
      At line 255 in file main.s
Comment: GPIO_PORTD_AMSEL_R used once
GPIO_PORTD_CR_R 40007524

Symbol: GPIO_PORTD_CR_R
   Definitions
      At line 93 in file main.s
   Uses
      At line 252 in file main.s
Comment: GPIO_PORTD_CR_R used once
GPIO_PORTD_DATA_R 400073FC

Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 87 in file main.s
   Uses
      At line 283 in file main.s
      At line 288 in file main.s
      At line 332 in file main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTD_DEN_R 4000751C

Symbol: GPIO_PORTD_DEN_R
   Definitions
      At line 91 in file main.s
   Uses
      At line 270 in file main.s
Comment: GPIO_PORTD_DEN_R used once
GPIO_PORTD_DIR_R 40007400

Symbol: GPIO_PORTD_DIR_R
   Definitions
      At line 88 in file main.s
   Uses
      At line 261 in file main.s
Comment: GPIO_PORTD_DIR_R used once
GPIO_PORTD_LOCK_R 40007520

Symbol: GPIO_PORTD_LOCK_R
   Definitions
      At line 92 in file main.s
   Uses
      At line 249 in file main.s
Comment: GPIO_PORTD_LOCK_R used once
GPIO_PORTD_PCTL_R 4000752C

Symbol: GPIO_PORTD_PCTL_R
   Definitions
      At line 95 in file main.s
   Uses
      At line 258 in file main.s
Comment: GPIO_PORTD_PCTL_R used once
GPIO_PORTD_PUR_R 40007510

Symbol: GPIO_PORTD_PUR_R
   Definitions
      At line 90 in file main.s
   Uses
      At line 267 in file main.s
Comment: GPIO_PORTD_PUR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 78 in file main.s
   Uses
      At line 199 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 83 in file main.s
   Uses
      At line 190 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 82 in file main.s
   Uses
      At line 187 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 76 in file main.s
   Uses
      At line 220 in file main.s
      At line 231 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 80 in file main.s
   Uses
      At line 205 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 77 in file main.s
   Uses
      At line 196 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 81 in file main.s
   Uses
      At line 184 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 84 in file main.s
   Uses
      At line 193 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 79 in file main.s
   Uses
      At line 202 in file main.s
Comment: GPIO_PORTF_PUR_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
      At line 103 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 130 in file main.s
      At line 146 in file main.s

ONESEC 00516155

Symbol: ONESEC
   Definitions
      At line 160 in file main.s
   Uses
      None
Comment: ONESEC unused
QUARTERSEC 00145855

Symbol: QUARTERSEC
   Definitions
      At line 161 in file main.s
   Uses
      At line 285 in file main.s
      At line 290 in file main.s

RED 00000002

Symbol: RED
   Definitions
      At line 101 in file main.s
   Uses
      At line 130 in file main.s
      At line 140 in file main.s

SW1 00000010

Symbol: SW1
   Definitions
      At line 104 in file main.s
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
      At line 105 in file main.s
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 106 in file main.s
   Uses
      At line 178 in file main.s
      At line 243 in file main.s

28 symbols
379 symbols in table
