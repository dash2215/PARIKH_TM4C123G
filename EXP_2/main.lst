


ARM Macro Assembler    Page 1 


    1 00000000         ; InputOutput.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Test the GPIO initialization functions by setting the 
                       LED
    4 00000000         ; color according to the status of the switches.
    5 00000000         ; The Reflex Test (no longer supported; each LED turns o
                       thers off):
    6 00000000         ; This program is functionally similar to SwitchTestMain
                       .c
    7 00000000         ; in Switch_4F120asm.  When switch #1 is pressed, the bl
                       ue
    8 00000000         ; LED comes on.  When switch #2 is pressed, the red LED
    9 00000000         ; comes on.  When both switches are pressed, the green L
                       ED
   10 00000000         ; comes on.  A short delay is inserted between
   11 00000000         ; polls of the buttons to compensate for your reflexes a
                       nd
   12 00000000         ; the button bounce.  The following color combinations c
                       an
   13 00000000         ; be made:
   14 00000000         ; Color    LED(s) Illumination Method
   15 00000000         ; dark     ---    release both buttons
   16 00000000         ; red      R--    press right button (#2)
   17 00000000         ; blue     --B    press left button (#1)
   18 00000000         ; green    -G-    press both buttons exactly together
   19 00000000         ; yellow   RG-    press right button, then press left bu
                       tton
   20 00000000         ; sky blue -GB    press left button, then press right bu
                       tton
   21 00000000         ; white    RGB    press either button, then press the ot
                       her
   22 00000000         ;                 button, then release the first button
   23 00000000         ; pink     R-B    press either button, then release the
   24 00000000         ;                 first button and immediately press the
                       
   25 00000000         ;                 other button
   26 00000000         ; Daniel Valvano
   27 00000000         ; September 11, 2013
   28 00000000         
   29 00000000         ;  This example accompanies the book
   30 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   31 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   32 00000000         ;  Section 4.2    Program 4.1
   33 00000000         ;
   34 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   35 00000000         ;   You may use, edit, run or distribute this file
   36 00000000         ;   as long as the above copyright notice remains
   37 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   38 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   39 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   40 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   41 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.



ARM Macro Assembler    Page 2 


   42 00000000         ;For more information about my classes, my research, and
                        my books, see
   43 00000000         ;http://users.ece.utexas.edu/~valvano/
   44 00000000         
   45 00000000         ; negative logic switch #2 connected to PF0 on the Launc
                       hpad
   46 00000000         ; red LED connected to PF1 on the Launchpad
   47 00000000         ; blue LED connected to PF2 on the Launchpad
   48 00000000         ; green LED connected to PF3 on the Launchpad
   49 00000000         ; negative logic switch #1 connected to PF4 on the Launc
                       hpad
   50 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   51 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   52 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   53 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   54 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   55 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   56 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   57 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   58 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   59 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   60 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
   61 00000000         ; debugged or re-programmed.
<<<<<<< Updated upstream
   62 00000000         
   63 00000000         ; ~~Port F~~
   64 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   65 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   66 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   67 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   68 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   69 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   70 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   71 00000000 40025528 
                       GPIO_PORTF_AMSEL_R



ARM Macro Assembler    Page 3 


                               EQU              0x40025528
   72 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   73 00000000         
   74 00000000         ; ~~Pord D~~
   75 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   76 00000000 40007400 
                       GPIO_PORTD_DIR_R
                               EQU              0x40007400
   77 00000000 40007420 
                       GPIO_PORTD_AFSEL_R
                               EQU              0x40007420
   78 00000000 40007510 
                       GPIO_PORTD_PUR_R
                               EQU              0x40007510
   79 00000000 4000751C 
                       GPIO_PORTD_DEN_R
                               EQU              0x4000751C
   80 00000000 40007520 
                       GPIO_PORTD_LOCK_R
                               EQU              0x40007520
   81 00000000 40007524 
                       GPIO_PORTD_CR_R
                               EQU              0x40007524
   82 00000000 40007528 
                       GPIO_PORTD_AMSEL_R
                               EQU              0x40007528
   83 00000000 4000752C 
                       GPIO_PORTD_PCTL_R
                               EQU              0x4000752C
   84 00000000         
   85 00000000         
   86 00000000         
   87 00000000         
   88 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   89 00000000 00000002 
                       RED     EQU              0x02
   90 00000000 00000004 
                       BLUE    EQU              0x04
   91 00000000 00000008 
                       GREEN   EQU              0x08
   92 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   93 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   94 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   95 00000000         
=======
   62 00000000         ;****************** main.s ***************
   63 00000000         ; Modified by: Darshil Parikh
   64 00000000         ; ECE505, W 2020, Experiment 1
   65 00000000         ; This file adds on to the sample code provided. 
   66 00000000         ; Date: 02/03/2020
   67 00000000         ;*****************************************
   68 00000000         ; PORT D
   69 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   70 00000000 40007400 
                       GPIO_PORTD_DIR_R
                               EQU              0x40007400
   71 00000000 40007420 
                       GPIO_PORTD_AFSEL_R
                               EQU              0x40007420
   72 00000000 40007510 
                       GPIO_PORTD_PUR_R
                               EQU              0x40007510
   73 00000000 4000751C 
                       GPIO_PORTD_DEN_R
                               EQU              0x4000751C
   74 00000000 40007520 
                       GPIO_PORTD_LOCK_R
                               EQU              0x40007520



ARM Macro Assembler    Page 3 


   75 00000000 40007524 
                       GPIO_PORTD_CR_R
                               EQU              0x40007524
   76 00000000 40007528 
                       GPIO_PORTD_AMSEL_R
                               EQU              0x40007528
   77 00000000 4000752C 
                       GPIO_PORTD_PCTL_R
                               EQU              0x4000752C
   78 00000000         
   79 00000000         
   80 00000000         ; PORT F
   81 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   82 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   83 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   84 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   85 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   86 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   87 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   88 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   89 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   90 00000000         
   91 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   92 00000000 00000002 
                       RED     EQU              0x02
   93 00000000 00000004 
                       BLUE    EQU              0x04
   94 00000000 00000008 
                       GREEN   EQU              0x08
   95 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   96 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   97 00000000 400FE608 



ARM Macro Assembler    Page 4 


                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   98 00000000         
   99 00000000         
  100 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  101 00000000                 THUMB
  102 00000000                 EXPORT           Start
  103 00000000         
  104 00000000         Start
  105 00000000         ;    BL  PortF_Init                  ; initialize input 
                       and output pins of Port F
  106 00000000 F000 F83E       BL               PortD_Init
  107 00000004         
  108 00000004         loop
  109 00000004 F04F 0001       MOV              R0, #0x01
  110 00000008 F000 F861       BL               PortD_Output
  111 0000000C 4831            LDR              R0, =FIFTHSEC
  112 0000000E F000 F805       BL               delay
  113 00000012 F04F 0000       MOV              R0, #0x00
  114 00000016 F000 F85A       BL               PortD_Output
  115 0000001A         
  116 0000001A         
  117 0000001A         
  118 0000001A         ;    LDR R0, =FIFTHSEC               ; R0 = FIFTHSEC (de
                       lay 0.2 second)
  119 0000001A         ;    BL  delay                       ; delay at least (3
                       *R0) cycles
  120 0000001A         ;    BL  PortF_Input                 ; read all of the s
                       witches on Port F
  121 0000001A         ;    CMP R0, #0x01                   ; R0 == 0x01?
  122 0000001A         ;    BEQ sw1pressed                  ; if so, switch 1 p
                       ressed
  123 0000001A         ;    CMP R0, #0x10                   ; R0 == 0x10?
  124 0000001A         ;    BEQ sw2pressed                  ; if so, switch 2 p
                       ressed
  125 0000001A         ;    CMP R0, #0x00                   ; R0 == 0x00?
  126 0000001A         ;    BEQ bothpressed                 ; if so, both switc
                       hes pressed
  127 0000001A         ;    CMP R0, #0x11                   ; R0 == 0x11?
  128 0000001A         ;    BEQ nopressed                   ; if so, neither sw
                       itch pressed
  129 0000001A         ; if none of the above, unexpected return value
  130 0000001A         ;    MOV R0, #(RED+GREEN+BLUE)       ; R0 = (RED|GREEN|B
                       LUE) (all LEDs on)
  131 0000001A         ;    BL  PortF_Output                ; turn all of the L
                       EDs on
  132 0000001A         ;    B   loop
  133 0000001A         ;sw1pressed
  134 0000001A         ;    MOV R0, #BLUE                   ; R0 = BLUE (blue L
                       ED on)
  135 0000001A         ;    BL  PortF_Output                ; turn the blue LED
                        on
  136 0000001A         ;    B   loop
  137 0000001A         ;sw2pressed
  138 0000001A         ;    MOV R0, #RED                    ; R0 = RED (red LED
                        on)
  139 0000001A         ;    BL  PortF_Output                ; turn the red LED 
                       on
>>>>>>> Stashed changes



ARM Macro Assembler    Page 5 


<<<<<<< Updated upstream
   96 00000000         
   97 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   98 00000000                 THUMB
   99 00000000                 EXPORT           Start
  100 00000000         
  101 00000000         Start
  102 00000000         ;    BL  PortF_Init                  ; initialize input 
                       and output pins of Port F
  103 00000000 F000 F83F       BL               PortD_Init
  104 00000004         loop
  105 00000004 F04F 0001       MOV              R0, #0x01
  106 00000008 F000 F862       BL               PortD_Output
  107 0000000C F24C 3050       LDR              R0, =50000
  108 00000010 F000 F805       BL               delay
  109 00000014 F04F 0000       MOV              R0, #0x0
  110 00000018 F000 F85A       BL               PortD_Output
  111 0000001C         ;    LDR R0, =FIFTHSEC               ; R0 = FIFTHSEC (de
                       lay 0.2 second)
  112 0000001C         ;    BL  delay                       ; delay at least (3
                       *R0) cycles
  113 0000001C         ;    BL  PortF_Input                 ; read all of the s
                       witches on Port F
  114 0000001C         ;    CMP R0, #0x01                   ; R0 == 0x01?
  115 0000001C         ;    BEQ sw1pressed                  ; if so, switch 1 p
                       ressed
  116 0000001C         ;    CMP R0, #0x10                   ; R0 == 0x10?
  117 0000001C         ;    BEQ sw2pressed                  ; if so, switch 2 p
                       ressed
  118 0000001C         ;    CMP R0, #0x00                   ; R0 == 0x00?
  119 0000001C         ;    BEQ bothpressed                 ; if so, both switc
                       hes pressed
  120 0000001C         ;    CMP R0, #0x11                   ; R0 == 0x11?
  121 0000001C         ;    BEQ nopressed                   ; if so, neither sw
                       itch pressed
  122 0000001C         ; if none of the above, unexpected return value
  123 0000001C         ;    MOV R0, #(RED+GREEN+BLUE)       ; R0 = (RED|GREEN|B
                       LUE) (all LEDs on)
  124 0000001C         ;    BL  PortF_Output                ; turn all of the L
                       EDs on
  125 0000001C         ;    B   loop
  126 0000001C         ;sw1pressed
  127 0000001C         ;    MOV R0, #BLUE                   ; R0 = BLUE (blue L
                       ED on)
  128 0000001C         ;    BL  PortF_Output                ; turn the blue LED
                        on
  129 0000001C         ;    B   loop
  130 0000001C         ;sw2pressed
  131 0000001C         ;    MOV R0, #RED                    ; R0 = RED (red LED
                        on)
  132 0000001C         ;    BL  PortF_Output                ; turn the red LED 
                       on
  133 0000001C         ;    B   loop
  134 0000001C         ;bothpressed
  135 0000001C         ;    MOV R0, #GREEN                  ; R0 = GREEN (green
                        LED on)
  136 0000001C         ;    BL  PortF_Output                ; turn the green LE
                       D on
  137 0000001C         ;    B   loop



ARM Macro Assembler    Page 5 


  138 0000001C         ;nopressed
  139 0000001C         ;    MOV R0, #0                      ; R0 = 0 (no LEDs o
                       n)
  140 0000001C         ;    BL  PortF_Output                ; turn all of the L
                       EDs off
  141 0000001C E7F2            B                loop
  142 0000001E         
  143 0000001E         ;------------delay------------
  144 0000001E         ; Delay function for testing, which delays about 3*count
                        cycles.
  145 0000001E         ; Input: R0  count
  146 0000001E         ; Output: none
  147 0000001E 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
  148 0000001E 00145855 
=======
  140 0000001A         ;    B   loop
  141 0000001A         ;bothpressed
  142 0000001A         ;    MOV R0, #GREEN                  ; R0 = GREEN (green
                        LED on)
  143 0000001A         ;    BL  PortF_Output                ; turn the green LE
                       D on
  144 0000001A         ;    B   loop
  145 0000001A         ;nopressed
  146 0000001A         ;    MOV R0, #0                      ; R0 = 0 (no LEDs o
                       n)
  147 0000001A         ;    BL  PortF_Output                ; turn all of the L
                       EDs off
  148 0000001A E7F3            B                loop
  149 0000001C         
  150 0000001C         ;------------delay------------
  151 0000001C         ; Delay function for testing, which delays about 3*count
                        cycles.
  152 0000001C         ; Input: R0  count
  153 0000001C         ; Output: none
  154 0000001C 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
  155 0000001C 00145855 
>>>>>>> Stashed changes
                       QUARTERSEC
                               EQU              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
<<<<<<< Updated upstream
  149 0000001E 001046AA 
=======
  156 0000001C 001046AA 
>>>>>>> Stashed changes
                       FIFTHSEC
                               EQU              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
<<<<<<< Updated upstream
  150 0000001E         delay
  151 0000001E 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  152 00000020 D1FD            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
  153 00000022 4770            BX               LR          ; return
  154 00000024         
  155 00000024         ;------------PortF_Init------------
  156 00000024         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  157 00000024         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  158 00000024         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  159 00000024         ; disabled.  Make the RGB LED's pins outputs.
  160 00000024         ; Input: none
  161 00000024         ; Output: none
  162 00000024         ; Modifies: R0, R1, R2
  163 00000024         PortF_Init
  164 00000024 492C            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  165 00000026 6808            LDR              R0, [R1]
  166 00000028 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  167 0000002C 6008            STR              R0, [R1]
  168 0000002E BF00            NOP
  169 00000030 BF00            NOP                          ; allow time for cl
                                                            ock to finish
  170 00000032 492A            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  171 00000034 482A            LDR              R0, =0x4C4F434B ; unlock GPIO P
=======
  157 0000001C         delay
  158 0000001C 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  159 0000001E D1FD            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
  160 00000020 4770            BX               LR          ; return
  161 00000022         
  162 00000022         ;------------PortF_Init------------
  163 00000022         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  164 00000022         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  165 00000022         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  166 00000022         ; disabled.  Make the RGB LED's pins outputs.
  167 00000022         ; Input: none
  168 00000022         ; Output: none
  169 00000022         ; Modifies: R0, R1, R2
  170 00000022         PortF_Init
  171 00000022 492D            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  172 00000024 6808            LDR              R0, [R1]
  173 00000026 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  174 0000002A 6008            STR              R0, [R1]
  175 0000002C BF00            NOP



ARM Macro Assembler    Page 6 


  176 0000002E BF00            NOP                          ; allow time for cl
                                                            ock to finish
  177 00000030 492A            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  178 00000032 482B            LDR              R0, =0x4C4F434B ; unlock GPIO P
>>>>>>> Stashed changes
                                                            ort F Commit Regist



ARM Macro Assembler    Page 6 


                                                            er
<<<<<<< Updated upstream
  172 00000036 6008            STR              R0, [R1]
  173 00000038 492A            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  174 0000003A F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  175 0000003E 6008            STR              R0, [R1]
  176 00000040 4929            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  177 00000042 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  178 00000046 6008            STR              R0, [R1]
  179 00000048 4928            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  180 0000004A F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  181 0000004E 6008            STR              R0, [R1]
  182 00000050 4927            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  183 00000052 F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  184 00000056 6008            STR              R0, [R1]
  185 00000058 4926            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  186 0000005A F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  187 0000005E 6008            STR              R0, [R1]
  188 00000060 4925            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  189 00000062 F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
  190 00000066 6008            STR              R0, [R1]
  191 00000068 4924            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  192 0000006A F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
  193 0000006E 6008            STR              R0, [R1]
  194 00000070 4770            BX               LR
  195 00000072         
  196 00000072         
  197 00000072         ;------------PortF_Input------------
  198 00000072         ; Read and return the status of the switches.
  199 00000072         ; Input: none
  200 00000072         ; Output: R0  0x01 if only Switch 1 is pressed
  201 00000072         ;         R0  0x10 if only Switch 2 is pressed
  202 00000072         ;         R0  0x00 if both switches are pressed
  203 00000072         ;         R0  0x11 if no switches are pressed
  204 00000072         ; Modifies: R1
  205 00000072         PortF_Input
  206 00000072 4923            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  207 00000074 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  208 00000076 F000 0011       AND              R0,R0,#0x11 ; just the input pi
=======
  179 00000034 6008            STR              R0, [R1]
  180 00000036 492B            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  181 00000038 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  182 0000003C 6008            STR              R0, [R1]
  183 0000003E 492A            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  184 00000040 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  185 00000044 6008            STR              R0, [R1]
  186 00000046 4929            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  187 00000048 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  188 0000004C 6008            STR              R0, [R1]
  189 0000004E 4928            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  190 00000050 F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  191 00000054 6008            STR              R0, [R1]
  192 00000056 4927            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  193 00000058 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  194 0000005C 6008            STR              R0, [R1]
  195 0000005E 4926            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  196 00000060 F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
  197 00000064 6008            STR              R0, [R1]
  198 00000066 4925            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  199 00000068 F04F 0000       MOV              R0, #0x00   ; 1 means enable di
                                                            gital I/O
  200 0000006C 6008            STR              R0, [R1]
  201 0000006E 4770            BX               LR
  202 00000070         
  203 00000070         
  204 00000070         ;------------PortF_Input------------
  205 00000070         ; Read and return the status of the switches.
  206 00000070         ; Input: none
  207 00000070         ; Output: R0  0x01 if only Switch 1 is pressed
  208 00000070         ;         R0  0x10 if only Switch 2 is pressed
  209 00000070         ;         R0  0x00 if both switches are pressed
  210 00000070         ;         R0  0x11 if no switches are pressed
>>>>>>> Stashed changes



ARM Macro Assembler    Page 7 


<<<<<<< Updated upstream
                                                            ns PF0 and PF4
  209 0000007A 4770            BX               LR          ; return R0 with in
                                                            puts
  210 0000007C         
  211 0000007C         ;------------PortF_Output------------
  212 0000007C         ; Set the output state of PF3-1.
  213 0000007C         ; Input: R0  new state of PF
  214 0000007C         ; Output: none
  215 0000007C         ; Modifies: R1
  216 0000007C         PortF_Output
  217 0000007C 4920            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  218 0000007E 6008            STR              R0, [R1]    ; write to PF3-1
  219 00000080 4770            BX               LR
  220 00000082         
  221 00000082         
  222 00000082         ;------------PortD_Init------------
  223 00000082         ; Initialize GPIO Port D for GPIA PD0. Weak internal pul
                       l-up
  224 00000082         ; resistors are enabled.
  225 00000082         ; Input: none
  226 00000082         ; Output: none
  227 00000082         ; Modifies: R0, R1, R2
  228 00000082         PortD_Init
  229 00000082 4915            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t D
  230 00000084 6808            LDR              R0, [R1]
  231 00000086 F040 0008       ORR              R0, R0, #0x08 ; set bit 5 to tu
                                                            rn on clock
  232 0000008A 6008            STR              R0, [R1]
  233 0000008C BF00            NOP
  234 0000008E BF00            NOP                          ; allow time for cl
                                                            ock to finish
  235 00000090 491C            LDR              R1, =GPIO_PORTD_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  236 00000092 4813            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort D Commit Regist
                                                            er
  237 00000094 6008            STR              R0, [R1]
  238 00000096 491C            LDR              R1, =GPIO_PORTD_CR_R ; enable c
                                                            ommit for Port D
  239 00000098 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  240 0000009C 6008            STR              R0, [R1]
  241 0000009E 491B            LDR              R1, =GPIO_PORTD_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  242 000000A0 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  243 000000A4 6008            STR              R0, [R1]
  244 000000A6 491A            LDR              R1, =GPIO_PORTD_PCTL_R ; 4) con
                                                            figure as GPIO
  245 000000A8 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port D as GPIO
                                                            
  246 000000AC 6008            STR              R0, [R1]
  247 000000AE 4919            LDR              R1, =GPIO_PORTD_DIR_R ; 5) set 
=======
  211 00000070         ; Modifies: R1
  212 00000070         PortF_Input
  213 00000070 4923            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  214 00000072 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  215 00000074 F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  216 00000078 4770            BX               LR          ; return R0 with in
                                                            puts
  217 0000007A         
  218 0000007A         ;------------PortF_Output------------
  219 0000007A         ; Set the output state of PF3-1.
  220 0000007A         ; Input: R0  new state of PF
  221 0000007A         ; Output: none
  222 0000007A         ; Modifies: R1
  223 0000007A         PortF_Output
  224 0000007A 4921            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  225 0000007C 6008            STR              R0, [R1]    ; write to PF3-1
  226 0000007E 4770            BX               LR
  227 00000080         
  228 00000080         
  229 00000080         
  230 00000080         ;------------PortD_Init------------
  231 00000080         ; Initialize GPIO Port D for negative logic switches on 
                       PD0 and
  232 00000080         ; PD4 as the Launchpad is wired.
  233 00000080         ; Make the RGB LED's pins outputs.
  234 00000080         ; Input: none
  235 00000080         ; Output: PWM Signal
  236 00000080         ; Modifies: R0, R1, R2
  237 00000080         PortD_Init
  238 00000080 4915            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t D
  239 00000082 6808            LDR              R0, [R1]
  240 00000084 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to tu
                                                            rn on clock
  241 00000088 6008            STR              R0, [R1]
  242 0000008A BF00            NOP
  243 0000008C BF00            NOP
  244 0000008E 491D            LDR              R1, =GPIO_PORTD_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  245 00000090 4813            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  246 00000092 6008            STR              R0, [R1]
  247 00000094 491C            LDR              R1, =GPIO_PORTD_CR_R ; enable c
                                                            ommit for Port D
  248 00000096 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  249 0000009A 6008            STR              R0, [R1]
  250 0000009C 491B            LDR              R1, =GPIO_PORTD_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  251 0000009E F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
>>>>>>> Stashed changes



ARM Macro Assembler    Page 8 


<<<<<<< Updated upstream
                                                            direction register
  248 000000B0 F04F 0001       MOV              R0,#0x01    ; PD0 
  249 000000B4 6008            STR              R0, [R1]
  250 000000B6 4918            LDR              R1, =GPIO_PORTD_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  251 000000B8 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  252 000000BC 6008            STR              R0, [R1]
  253 000000BE 4917            LDR              R1, =GPIO_PORTD_PUR_R ; pull-up
                                                             resistors for PD0
  254 000000C0 F04F 0001       MOV              R0, #0x01   ; enable weak 
  255 000000C4 6008            STR              R0, [R1]
  256 000000C6 4916            LDR              R1, =GPIO_PORTD_DEN_R ; 7) enab
                                                            le Port D digital p
                                                            ort
  257 000000C8 F04F 0001       MOV              R0, #0x01   ; 1 means enable di
                                                            gital I/O
  258 000000CC 6008            STR              R0, [R1]
  259 000000CE 4770            BX               LR
  260 000000D0         
  261 000000D0         ;------------PortD_Output------------
  262 000000D0         ; Set the output state of PD0-1.
  263 000000D0         ; Input: R0  new state of PD
  264 000000D0         ; Output: none
  265 000000D0         ; Modifies: R1
  266 000000D0         PortD_Output
  267 000000D0 4914            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  268 000000D2 6008            STR              R0, [R1]    ; write to PD0-1
  269 000000D4 4770            BX               LR
  270 000000D6         
  271 000000D6         
  272 000000D6         
  273 000000D6         
  274 000000D6 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  275 000000D8                 END                          ; end of file
=======
  252 000000A2 6008            STR              R0, [R1]
  253 000000A4 491A            LDR              R1, =GPIO_PORTD_PCTL_R ; 4) con
                                                            figure as GPIO
  254 000000A6 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  255 000000AA 6008            STR              R0, [R1]
  256 000000AC 4919            LDR              R1, =GPIO_PORTD_DIR_R ; 5) set 
                                                            direction register
  257 000000AE F04F 0001       MOV              R0,#0x01    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  258 000000B2 6008            STR              R0, [R1]
  259 000000B4 4918            LDR              R1, =GPIO_PORTD_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  260 000000B6 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  261 000000BA 6008            STR              R0, [R1]
  262 000000BC 4917            LDR              R1, =GPIO_PORTD_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  263 000000BE F04F 0001       MOV              R0, #0x01   ; enable weak pull-
                                                            up on PF0 and PF4
  264 000000C2 6008            STR              R0, [R1]
  265 000000C4 4916            LDR              R1, =GPIO_PORTD_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  266 000000C6 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
  267 000000CA 6008            STR              R0, [R1]
  268 000000CC 4770            BX               LR
  269 000000CE         
  270 000000CE         
  271 000000CE         ;------------PortD_Output------------
  272 000000CE         ; Set the output state of PD0-1.
  273 000000CE         ; Input: R0  new state of PF
  274 000000CE         ; Output: none
  275 000000CE         ; Modifies: R1
  276 000000CE         PortD_Output
  277 000000CE 4915            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  278 000000D0 6008            STR              R0, [R1]    ; write to PF3-1
  279 000000D2 4770            BX               LR
  280 000000D4         
  281 000000D4         
  282 000000D4         
  283 000000D4         
  284 000000D4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  285 000000D4                 END                          ; end of file
              001046AA 
>>>>>>> Stashed changes
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 



ARM Macro Assembler    Page 9 


              40025420 
              40025510 
              4002551C 
              400253FC 
              40007520 
              40007524 
              40007528 
              4000752C 
              40007400 
              40007420 
              40007510 
              4000751C 
              400073FC 
<<<<<<< Updated upstream



ARM Macro Assembler    Page 9 


=======
>>>>>>> Stashed changes
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\_out\main.d -o.\_out\main.o -I.\RTE\_InputOutput -IC:\Keil_v5
\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\LM4F_DF
P\1.0.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 526" --predefine="_RTE_ SETA 1" --predefine="LM4F120 SETA 1" --list=.\m
ain.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
<<<<<<< Updated upstream
      At line 97 in file main.s
   Uses
      None
Comment: .text unused
PortD_Init 00000082

Symbol: PortD_Init
   Definitions
      At line 228 in file main.s
   Uses
      At line 103 in file main.s
Comment: PortD_Init used once
PortD_Output 000000D0

Symbol: PortD_Output
   Definitions
      At line 266 in file main.s
   Uses
      At line 106 in file main.s
      At line 110 in file main.s

PortF_Init 00000024

Symbol: PortF_Init
   Definitions
      At line 163 in file main.s
   Uses
      None
Comment: PortF_Init unused
PortF_Input 00000072

Symbol: PortF_Input
   Definitions
      At line 205 in file main.s
   Uses
      None
Comment: PortF_Input unused
PortF_Output 0000007C

Symbol: PortF_Output
   Definitions
      At line 216 in file main.s
=======
      At line 100 in file main.s
   Uses
      None
Comment: .text unused
PortD_Init 00000080

Symbol: PortD_Init
   Definitions
      At line 237 in file main.s
   Uses
      At line 106 in file main.s
Comment: PortD_Init used once
PortD_Output 000000CE

Symbol: PortD_Output
   Definitions
      At line 276 in file main.s
   Uses
      At line 110 in file main.s
      At line 114 in file main.s

PortF_Init 00000022

Symbol: PortF_Init
   Definitions
      At line 170 in file main.s
   Uses
      None
Comment: PortF_Init unused
PortF_Input 00000070

Symbol: PortF_Input
   Definitions
      At line 212 in file main.s
   Uses
      None
Comment: PortF_Input unused
PortF_Output 0000007A

Symbol: PortF_Output
   Definitions
      At line 223 in file main.s
>>>>>>> Stashed changes
   Uses
      None
Comment: PortF_Output unused
Start 00000000

Symbol: Start
   Definitions
<<<<<<< Updated upstream
      At line 101 in file main.s
   Uses
      At line 99 in file main.s
Comment: Start used once
delay 0000001E




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: delay
   Definitions
      At line 150 in file main.s
   Uses
      At line 108 in file main.s
      At line 152 in file main.s

loop 00000004

Symbol: loop
   Definitions
      At line 104 in file main.s
   Uses
      At line 141 in file main.s
Comment: loop used once
9 symbols
=======
      At line 104 in file main.s
   Uses
      At line 102 in file main.s
Comment: Start used once
delay 0000001C

>>>>>>> Stashed changes



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

<<<<<<< Updated upstream
BLUE 00000004
=======
Symbol: delay
   Definitions
      At line 157 in file main.s
   Uses
      At line 112 in file main.s
      At line 159 in file main.s
>>>>>>> Stashed changes

Symbol: BLUE
   Definitions
      At line 90 in file main.s
   Uses
      None
Comment: BLUE unused
FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
<<<<<<< Updated upstream
      At line 149 in file main.s
   Uses
      None
Comment: FIFTHSEC unused
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 88 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTD_AFSEL_R 40007420

Symbol: GPIO_PORTD_AFSEL_R
   Definitions
      At line 77 in file main.s
   Uses
      At line 250 in file main.s
Comment: GPIO_PORTD_AFSEL_R used once
GPIO_PORTD_AMSEL_R 40007528

Symbol: GPIO_PORTD_AMSEL_R
   Definitions
      At line 82 in file main.s
   Uses
      At line 241 in file main.s
Comment: GPIO_PORTD_AMSEL_R used once
GPIO_PORTD_CR_R 40007524

Symbol: GPIO_PORTD_CR_R
   Definitions
      At line 81 in file main.s
   Uses
      At line 238 in file main.s
Comment: GPIO_PORTD_CR_R used once
GPIO_PORTD_DATA_R 400073FC

Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 75 in file main.s
   Uses
      At line 267 in file main.s
Comment: GPIO_PORTD_DATA_R used once
GPIO_PORTD_DEN_R 4000751C

Symbol: GPIO_PORTD_DEN_R
=======
      At line 108 in file main.s
   Uses
      At line 148 in file main.s
Comment: loop used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 93 in file main.s
   Uses
      None
Comment: BLUE unused
FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 156 in file main.s
   Uses
      At line 111 in file main.s
Comment: FIFTHSEC used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 91 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTD_AFSEL_R 40007420

Symbol: GPIO_PORTD_AFSEL_R
   Definitions
      At line 71 in file main.s
   Uses
      At line 259 in file main.s
Comment: GPIO_PORTD_AFSEL_R used once
GPIO_PORTD_AMSEL_R 40007528

Symbol: GPIO_PORTD_AMSEL_R
   Definitions
      At line 76 in file main.s
   Uses
      At line 250 in file main.s
Comment: GPIO_PORTD_AMSEL_R used once
GPIO_PORTD_CR_R 40007524
>>>>>>> Stashed changes

Symbol: GPIO_PORTD_CR_R
   Definitions
      At line 75 in file main.s
   Uses
      At line 247 in file main.s
Comment: GPIO_PORTD_CR_R used once
GPIO_PORTD_DATA_R 400073FC

<<<<<<< Updated upstream

ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 79 in file main.s
   Uses
      At line 256 in file main.s
Comment: GPIO_PORTD_DEN_R used once
GPIO_PORTD_DIR_R 40007400

Symbol: GPIO_PORTD_DIR_R
=======
Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 69 in file main.s
   Uses
      At line 277 in file main.s
Comment: GPIO_PORTD_DATA_R used once
GPIO_PORTD_DEN_R 4000751C

Symbol: GPIO_PORTD_DEN_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

>>>>>>> Stashed changes
   Definitions
      At line 76 in file main.s
   Uses
<<<<<<< Updated upstream
      At line 247 in file main.s
Comment: GPIO_PORTD_DIR_R used once
GPIO_PORTD_LOCK_R 40007520

Symbol: GPIO_PORTD_LOCK_R
   Definitions
      At line 80 in file main.s
   Uses
      At line 235 in file main.s
Comment: GPIO_PORTD_LOCK_R used once
GPIO_PORTD_PCTL_R 4000752C

Symbol: GPIO_PORTD_PCTL_R
   Definitions
      At line 83 in file main.s
   Uses
      At line 244 in file main.s
Comment: GPIO_PORTD_PCTL_R used once
GPIO_PORTD_PUR_R 40007510

Symbol: GPIO_PORTD_PUR_R
   Definitions
      At line 78 in file main.s
   Uses
      At line 253 in file main.s
=======
      At line 265 in file main.s
Comment: GPIO_PORTD_DEN_R used once
GPIO_PORTD_DIR_R 40007400

Symbol: GPIO_PORTD_DIR_R
   Definitions
      At line 70 in file main.s
   Uses
      At line 256 in file main.s
Comment: GPIO_PORTD_DIR_R used once
GPIO_PORTD_LOCK_R 40007520

Symbol: GPIO_PORTD_LOCK_R
   Definitions
      At line 74 in file main.s
   Uses
      At line 244 in file main.s
Comment: GPIO_PORTD_LOCK_R used once
GPIO_PORTD_PCTL_R 4000752C

Symbol: GPIO_PORTD_PCTL_R
   Definitions
      At line 77 in file main.s
   Uses
      At line 253 in file main.s
Comment: GPIO_PORTD_PCTL_R used once
GPIO_PORTD_PUR_R 40007510

Symbol: GPIO_PORTD_PUR_R
   Definitions
      At line 72 in file main.s
   Uses
      At line 262 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTD_PUR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
<<<<<<< Updated upstream
      At line 66 in file main.s
   Uses
      At line 185 in file main.s
=======
      At line 83 in file main.s
   Uses
      At line 192 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
<<<<<<< Updated upstream
      At line 71 in file main.s
   Uses
      At line 176 in file main.s
=======
      At line 88 in file main.s
   Uses
      At line 183 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
<<<<<<< Updated upstream
      At line 70 in file main.s
=======
      At line 87 in file main.s
>>>>>>> Stashed changes
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

<<<<<<< Updated upstream
      At line 173 in file main.s
=======
      At line 180 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
<<<<<<< Updated upstream
      At line 64 in file main.s
   Uses
      At line 206 in file main.s
      At line 217 in file main.s
=======
      At line 81 in file main.s
   Uses
      At line 213 in file main.s
      At line 224 in file main.s
>>>>>>> Stashed changes

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
<<<<<<< Updated upstream
      At line 68 in file main.s
   Uses
      At line 191 in file main.s
=======
      At line 85 in file main.s
   Uses
      At line 198 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
<<<<<<< Updated upstream
      At line 65 in file main.s
   Uses
      At line 182 in file main.s
=======
      At line 82 in file main.s
   Uses
      At line 189 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
<<<<<<< Updated upstream
      At line 69 in file main.s
   Uses
      At line 170 in file main.s
=======
      At line 86 in file main.s
   Uses
      At line 177 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
<<<<<<< Updated upstream
      At line 72 in file main.s
   Uses
      At line 179 in file main.s
=======
      At line 89 in file main.s
   Uses
      At line 186 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
<<<<<<< Updated upstream
      At line 67 in file main.s
   Uses
      At line 188 in file main.s
=======
      At line 84 in file main.s
   Uses
      At line 195 in file main.s
>>>>>>> Stashed changes
Comment: GPIO_PORTF_PUR_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
<<<<<<< Updated upstream
      At line 91 in file main.s
=======
      At line 94 in file main.s
>>>>>>> Stashed changes
   Uses
      None
Comment: GREEN unused



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

ONESEC 00516155

Symbol: ONESEC
   Definitions
<<<<<<< Updated upstream
      At line 147 in file main.s
=======
      At line 154 in file main.s
>>>>>>> Stashed changes
   Uses
      None
Comment: ONESEC unused
QUARTERSEC 00145855

Symbol: QUARTERSEC
   Definitions
<<<<<<< Updated upstream
      At line 148 in file main.s
=======
      At line 155 in file main.s
>>>>>>> Stashed changes
   Uses
      None
Comment: QUARTERSEC unused
RED 00000002

Symbol: RED
   Definitions
<<<<<<< Updated upstream
      At line 89 in file main.s
=======
      At line 92 in file main.s
>>>>>>> Stashed changes
   Uses
      None
Comment: RED unused
SW1 00000010

Symbol: SW1
   Definitions
<<<<<<< Updated upstream
      At line 92 in file main.s
=======
      At line 95 in file main.s
>>>>>>> Stashed changes
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
<<<<<<< Updated upstream
      At line 93 in file main.s
=======
      At line 96 in file main.s
>>>>>>> Stashed changes
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
<<<<<<< Updated upstream
      At line 94 in file main.s
   Uses
      At line 164 in file main.s
      At line 229 in file main.s
=======
      At line 97 in file main.s
   Uses
      At line 171 in file main.s
      At line 238 in file main.s
>>>>>>> Stashed changes

28 symbols
374 symbols in table
