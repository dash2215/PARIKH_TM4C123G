


ARM Macro Assembler    Page 1 


    1 00000000         ; InputOutput.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Test the GPIO initialization functions by setting the 
                       LED
    4 00000000         ; color according to the status of the switches.
    5 00000000         ; The Reflex Test (no longer supported; each LED turns o
                       thers off):
    6 00000000         ; This program is functionally similar to SwitchTestMain
                       .c
    7 00000000         ; in Switch_4F120asm.  When switch #1 is pressed, the bl
                       ue
    8 00000000         ; LED comes on.  When switch #2 is pressed, the red LED
    9 00000000         ; comes on.  When both switches are pressed, the green L
                       ED
   10 00000000         ; comes on.  A short delay is inserted between
   11 00000000         ; polls of the buttons to compensate for your reflexes a
                       nd
   12 00000000         ; the button bounce.  The following color combinations c
                       an
   13 00000000         ; be made:
   14 00000000         ; Color    LED(s) Illumination Method
   15 00000000         ; dark     ---    release both buttons
   16 00000000         ; red      R--    press right button (#2)
   17 00000000         ; blue     --B    press left button (#1)
   18 00000000         ; green    -G-    press both buttons exactly together
   19 00000000         ; yellow   RG-    press right button, then press left bu
                       tton
   20 00000000         ; sky blue -GB    press left button, then press right bu
                       tton
   21 00000000         ; white    RGB    press either button, then press the ot
                       her
   22 00000000         ;                 button, then release the first button
   23 00000000         ; pink     R-B    press either button, then release the
   24 00000000         ;                 first button and immediately press the
                       
   25 00000000         ;                 other button
   26 00000000         ; Daniel Valvano
   27 00000000         ; September 11, 2013
   28 00000000         
   29 00000000         ;  This example accompanies the book
   30 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   31 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   32 00000000         ;  Section 4.2    Program 4.1
   33 00000000         ;
   34 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   35 00000000         ;   You may use, edit, run or distribute this file
   36 00000000         ;   as long as the above copyright notice remains
   37 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   38 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   39 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   40 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   41 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.



ARM Macro Assembler    Page 2 


   42 00000000         ;For more information about my classes, my research, and
                        my books, see
   43 00000000         ;http://users.ece.utexas.edu/~valvano/
   44 00000000         
   45 00000000         ; negative logic switch #2 connected to PF0 on the Launc
                       hpad
   46 00000000         ; red LED connected to PF1 on the Launchpad
   47 00000000         ; blue LED connected to PF2 on the Launchpad
   48 00000000         ; green LED connected to PF3 on the Launchpad
   49 00000000         ; negative logic switch #1 connected to PF4 on the Launc
                       hpad
   50 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   51 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   52 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   53 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   54 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   55 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   56 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   57 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   58 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   59 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   60 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
   61 00000000         ; debugged or re-programmed.
   62 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   63 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   64 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   65 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   66 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   67 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   68 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   69 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   70 00000000 4002552C 



ARM Macro Assembler    Page 3 


                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   71 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   72 00000000 00000002 
                       RED     EQU              0x02
   73 00000000 00000004 
                       BLUE    EQU              0x04
   74 00000000 00000008 
                       GREEN   EQU              0x08
   75 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   76 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   77 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   78 00000000         
   79 00000000         
   80 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   81 00000000                 THUMB
   82 00000000                 EXPORT           Start
   83 00000000         
   84 00000000         Start
   85 00000000 F000 F829       BL               PortF_Init  ; initialize input 
                                                            and output pins of 
                                                            Port F
   86 00000004         loop
   87 00000004 482B            LDR              R0, =FIFTHSEC ; R0 = FIFTHSEC (
                                                            delay 0.2 second)
   88 00000006 F000 F823       BL               delay       ; delay at least (3
                                                            *R0) cycles
   89 0000000A F000 F84B       BL               PortF_Input ; read all of the s
                                                            witches on Port F
   90 0000000E 2801            CMP              R0, #0x01   ; R0 == 0x01?
   91 00000010 D00A            BEQ              sw1pressed  ; if so, switch 1 p
                                                            ressed
   92 00000012 2810            CMP              R0, #0x10   ; R0 == 0x10?
   93 00000014 D00D            BEQ              sw2pressed  ; if so, switch 2 p
                                                            ressed
   94 00000016 2800            CMP              R0, #0x00   ; R0 == 0x00?
   95 00000018 D010            BEQ              bothpressed ; if so, both switc
                                                            hes pressed
   96 0000001A 2811            CMP              R0, #0x11   ; R0 == 0x11?
   97 0000001C D013            BEQ              nopressed   ; if so, neither sw
                                                            itch pressed
   98 0000001E         ; if none of the above, unexpected return value
   99 0000001E F04F 000E       MOV              R0, #(RED+GREEN+BLUE) ; R0 = (R
                                                            ED|GREEN|BLUE) (all
                                                             LEDs on)
  100 00000022 F000 F844       BL               PortF_Output ; turn all of the 
                                                            LEDs on



ARM Macro Assembler    Page 4 


  101 00000026 E7ED            B                loop
  102 00000028         sw1pressed
  103 00000028 F04F 0004       MOV              R0, #BLUE   ; R0 = BLUE (blue L
                                                            ED on)
  104 0000002C F000 F83F       BL               PortF_Output ; turn the blue LE
                                                            D on
  105 00000030 E7E8            B                loop
  106 00000032         sw2pressed
  107 00000032 F04F 0002       MOV              R0, #RED    ; R0 = RED (red LED
                                                             on)
  108 00000036 F000 F83A       BL               PortF_Output ; turn the red LED
                                                             on
  109 0000003A E7E3            B                loop
  110 0000003C         bothpressed
  111 0000003C F04F 0008       MOV              R0, #GREEN  ; R0 = GREEN (green
                                                             LED on)
  112 00000040 F000 F835       BL               PortF_Output ; turn the green L
                                                            ED on
  113 00000044 E7DE            B                loop
  114 00000046         nopressed
  115 00000046 F04F 0000       MOV              R0, #0      ; R0 = 0 (no LEDs o
                                                            n)
  116 0000004A F000 F830       BL               PortF_Output ; turn all of the 
                                                            LEDs off
  117 0000004E E7D9            B                loop
  118 00000050         
  119 00000050         ;------------delay------------
  120 00000050         ; Delay function for testing, which delays about 3*count
                        cycles.
  121 00000050         ; Input: R0  count
  122 00000050         ; Output: none
  123 00000050 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
  124 00000050 00145855 
                       QUARTERSEC
                               EQU              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
  125 00000050 001046AA 
                       FIFTHSEC
                               EQU              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
  126 00000050         delay
  127 00000050 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  128 00000052 D1FD            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
  129 00000054 4770            BX               LR          ; return
  130 00000056         
  131 00000056         ;------------PortF_Init------------
  132 00000056         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  133 00000056         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  134 00000056         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  135 00000056         ; disabled.  Make the RGB LED's pins outputs.



ARM Macro Assembler    Page 5 


  136 00000056         ; Input: none
  137 00000056         ; Output: none
  138 00000056         ; Modifies: R0, R1, R2
  139 00000056         PortF_Init
  140 00000056 4918            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  141 00000058 6808            LDR              R0, [R1]
  142 0000005A F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  143 0000005E 6008            STR              R0, [R1]
  144 00000060 BF00            NOP
  145 00000062 BF00            NOP                          ; allow time for cl
                                                            ock to finish
  146 00000064 4915            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  147 00000066 4816            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  148 00000068 6008            STR              R0, [R1]
  149 0000006A 4916            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  150 0000006C F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  151 00000070 6008            STR              R0, [R1]
  152 00000072 4915            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  153 00000074 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  154 00000078 6008            STR              R0, [R1]
  155 0000007A 4914            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  156 0000007C F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  157 00000080 6008            STR              R0, [R1]
  158 00000082 4913            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  159 00000084 F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  160 00000088 6008            STR              R0, [R1]
  161 0000008A 4912            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  162 0000008C F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  163 00000090 6008            STR              R0, [R1]
  164 00000092 4911            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  165 00000094 F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
  166 00000098 6008            STR              R0, [R1]
  167 0000009A 4910            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  168 0000009C F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di



ARM Macro Assembler    Page 6 


                                                            gital I/O
  169 000000A0 6008            STR              R0, [R1]
  170 000000A2 4770            BX               LR
  171 000000A4         
  172 000000A4         
  173 000000A4         ;------------PortF_Input------------
  174 000000A4         ; Read and return the status of the switches.
  175 000000A4         ; Input: none
  176 000000A4         ; Output: R0  0x01 if only Switch 1 is pressed
  177 000000A4         ;         R0  0x10 if only Switch 2 is pressed
  178 000000A4         ;         R0  0x00 if both switches are pressed
  179 000000A4         ;         R0  0x11 if no switches are pressed
  180 000000A4         ; Modifies: R1
  181 000000A4         PortF_Input
  182 000000A4 490E            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  183 000000A6 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  184 000000A8 F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  185 000000AC 4770            BX               LR          ; return R0 with in
                                                            puts
  186 000000AE         
  187 000000AE         ;------------PortF_Output------------
  188 000000AE         ; Set the output state of PF3-1.
  189 000000AE         ; Input: R0  new state of PF
  190 000000AE         ; Output: none
  191 000000AE         ; Modifies: R1
  192 000000AE         PortF_Output
  193 000000AE 490C            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  194 000000B0 6008            STR              R0, [R1]    ; write to PF3-1
  195 000000B2 4770            BX               LR
  196 000000B4         
  197 000000B4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  198 000000B4                 END                          ; end of file
              001046AA 
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\_out\main.d -o.\_out\main.o -I.\RTE\_InputOutput -IC:\Keil_v5
\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\LM4F_DF
P\1.0.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 526" --predefine="_RTE_ SETA 1" --predefine="LM4F120 SETA 1" --list=.\m
ain.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 80 in file main.s
   Uses
      None
Comment: .text unused
PortF_Init 00000056

Symbol: PortF_Init
   Definitions
      At line 139 in file main.s
   Uses
      At line 85 in file main.s
Comment: PortF_Init used once
PortF_Input 000000A4

Symbol: PortF_Input
   Definitions
      At line 181 in file main.s
   Uses
      At line 89 in file main.s
Comment: PortF_Input used once
PortF_Output 000000AE

Symbol: PortF_Output
   Definitions
      At line 192 in file main.s
   Uses
      At line 100 in file main.s
      At line 104 in file main.s
      At line 108 in file main.s
      At line 112 in file main.s
      At line 116 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 84 in file main.s
   Uses
      At line 82 in file main.s
Comment: Start used once
bothpressed 0000003C

Symbol: bothpressed
   Definitions
      At line 110 in file main.s
   Uses
      At line 95 in file main.s
Comment: bothpressed used once
delay 00000050

Symbol: delay
   Definitions
      At line 126 in file main.s
   Uses
      At line 88 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 128 in file main.s

loop 00000004

Symbol: loop
   Definitions
      At line 86 in file main.s
   Uses
      At line 101 in file main.s
      At line 105 in file main.s
      At line 109 in file main.s
      At line 113 in file main.s
      At line 117 in file main.s

nopressed 00000046

Symbol: nopressed
   Definitions
      At line 114 in file main.s
   Uses
      At line 97 in file main.s
Comment: nopressed used once
sw1pressed 00000028

Symbol: sw1pressed
   Definitions
      At line 102 in file main.s
   Uses
      At line 91 in file main.s
Comment: sw1pressed used once
sw2pressed 00000032

Symbol: sw2pressed
   Definitions
      At line 106 in file main.s
   Uses
      At line 93 in file main.s
Comment: sw2pressed used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 73 in file main.s
   Uses
      At line 99 in file main.s
      At line 103 in file main.s

FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 125 in file main.s
   Uses
      At line 87 in file main.s
Comment: FIFTHSEC used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 64 in file main.s
   Uses
      At line 161 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 69 in file main.s
   Uses
      At line 152 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 68 in file main.s
   Uses
      At line 149 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 62 in file main.s
   Uses
      At line 182 in file main.s
      At line 193 in file main.s

GPIO_PORTF_DEN_R 4002551C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 66 in file main.s
   Uses
      At line 167 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 63 in file main.s
   Uses
      At line 158 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 67 in file main.s
   Uses
      At line 146 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 70 in file main.s
   Uses
      At line 155 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 65 in file main.s
   Uses
      At line 164 in file main.s
Comment: GPIO_PORTF_PUR_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
      At line 74 in file main.s
   Uses
      At line 99 in file main.s
      At line 111 in file main.s

ONESEC 00516155

Symbol: ONESEC
   Definitions
      At line 123 in file main.s
   Uses
      None
Comment: ONESEC unused
QUARTERSEC 00145855

Symbol: QUARTERSEC



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 124 in file main.s
   Uses
      None
Comment: QUARTERSEC unused
RED 00000002

Symbol: RED
   Definitions
      At line 72 in file main.s
   Uses
      At line 99 in file main.s
      At line 107 in file main.s

SW1 00000010

Symbol: SW1
   Definitions
      At line 75 in file main.s
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
      At line 76 in file main.s
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 77 in file main.s
   Uses
      At line 140 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
19 symbols
367 symbols in table
