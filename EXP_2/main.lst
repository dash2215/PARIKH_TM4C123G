


ARM Macro Assembler    Page 1 


    1 00000000         ; InputOutput.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Test the GPIO initialization functions by setting the 
                       LED
    4 00000000         ; color according to the status of the switches.
    5 00000000         ; The Reflex Test (no longer supported; each LED turns o
                       thers off):
    6 00000000         ; This program is functionally similar to SwitchTestMain
                       .c
    7 00000000         ; in Switch_4F120asm.  When switch #1 is pressed, the bl
                       ue
    8 00000000         ; LED comes on.  When switch #2 is pressed, the red LED
    9 00000000         ; comes on.  When both switches are pressed, the green L
                       ED
   10 00000000         ; comes on.  A short delay is inserted between
   11 00000000         ; polls of the buttons to compensate for your reflexes a
                       nd
   12 00000000         ; the button bounce.  The following color combinations c
                       an
   13 00000000         ; be made:
   14 00000000         ; Color    LED(s) Illumination Method
   15 00000000         ; dark     ---    release both buttons
   16 00000000         ; red      R--    press right button (#2)
   17 00000000         ; blue     --B    press left button (#1)
   18 00000000         ; green    -G-    press both buttons exactly together
   19 00000000         ; yellow   RG-    press right button, then press left bu
                       tton
   20 00000000         ; sky blue -GB    press left button, then press right bu
                       tton
   21 00000000         ; white    RGB    press either button, then press the ot
                       her
   22 00000000         ;                 button, then release the first button
   23 00000000         ; pink     R-B    press either button, then release the
   24 00000000         ;                 first button and immediately press the
                       
   25 00000000         ;                 other button
   26 00000000         ; Daniel Valvano
   27 00000000         ; September 11, 2013
   28 00000000         
   29 00000000         ;  This example accompanies the book
   30 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   31 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   32 00000000         ;  Section 4.2    Program 4.1
   33 00000000         ;
   34 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   35 00000000         ;   You may use, edit, run or distribute this file
   36 00000000         ;   as long as the above copyright notice remains
   37 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   38 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   39 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   40 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   41 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.



ARM Macro Assembler    Page 2 


   42 00000000         ;For more information about my classes, my research, and
                        my books, see
   43 00000000         ;http://users.ece.utexas.edu/~valvano/
   44 00000000         
   45 00000000         ; negative logic switch #2 connected to PF0 on the Launc
                       hpad
   46 00000000         ; red LED connected to PF1 on the Launchpad
   47 00000000         ; blue LED connected to PF2 on the Launchpad
   48 00000000         ; green LED connected to PF3 on the Launchpad
   49 00000000         ; negative logic switch #1 connected to PF4 on the Launc
                       hpad
   50 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   51 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   52 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   53 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   54 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   55 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   56 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   57 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   58 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   59 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   60 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
   61 00000000         ; debugged or re-programmed.
   62 00000000         
   63 00000000         ; ~~Port F~~
   64 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   65 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   66 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   67 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   68 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   69 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   70 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   71 00000000 40025528 
                       GPIO_PORTF_AMSEL_R



ARM Macro Assembler    Page 3 


                               EQU              0x40025528
   72 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   73 00000000         
   74 00000000         ; ~~Pord D~~
   75 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   76 00000000 40007400 
                       GPIO_PORTD_DIR_R
                               EQU              0x40007400
   77 00000000 40007420 
                       GPIO_PORTD_AFSEL_R
                               EQU              0x40007420
   78 00000000 40007510 
                       GPIO_PORTD_PUR_R
                               EQU              0x40007510
   79 00000000 4000751C 
                       GPIO_PORTD_DEN_R
                               EQU              0x4000751C
   80 00000000 40007520 
                       GPIO_PORTD_LOCK_R
                               EQU              0x40007520
   81 00000000 40007524 
                       GPIO_PORTD_CR_R
                               EQU              0x40007524
   82 00000000 40007528 
                       GPIO_PORTD_AMSEL_R
                               EQU              0x40007528
   83 00000000 4000752C 
                       GPIO_PORTD_PCTL_R
                               EQU              0x4000752C
   84 00000000         
   85 00000000         
   86 00000000         
   87 00000000         
   88 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   89 00000000 00000002 
                       RED     EQU              0x02
   90 00000000 00000004 
                       BLUE    EQU              0x04
   91 00000000 00000008 
                       GREEN   EQU              0x08
   92 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   93 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   94 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   95 00000000         



ARM Macro Assembler    Page 4 


   96 00000000         
   97 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   98 00000000                 THUMB
   99 00000000                 EXPORT           Start
  100 00000000         
  101 00000000         Start
  102 00000000         ;    BL  PortF_Init                  ; initialize input 
                       and output pins of Port F
  103 00000000 F000 F837       BL               PortD_Init
  104 00000004         loop
  105 00000004 F642 7059       MOV              R0, #12121
  106 00000008 F000 F86C       BL               buzzer_pin_toggle_wPar
  107 0000000C         ; MOV R0, #0x01
  108 0000000C         ; BL buzzer_pin_toggle
  109 0000000C         ; LDR R0, =ONESEC
  110 0000000C         ; BL delay
  111 0000000C         ; MOV R0, #0x0
  112 0000000C         ; BL buzzer_pin_toggle
  113 0000000C         ;    LDR R0, =FIFTHSEC               ; R0 = FIFTHSEC (de
                       lay 0.2 second)
  114 0000000C         ;    BL  delay                       ; delay at least (3
                       *R0) cycles
  115 0000000C         ;    BL  PortF_Input                 ; read all of the s
                       witches on Port F
  116 0000000C         ;    CMP R0, #0x01                   ; R0 == 0x01?
  117 0000000C         ;    BEQ sw1pressed                  ; if so, switch 1 p
                       ressed
  118 0000000C         ;    CMP R0, #0x10                   ; R0 == 0x10?
  119 0000000C         ;    BEQ sw2pressed                  ; if so, switch 2 p
                       ressed
  120 0000000C         ;    CMP R0, #0x00                   ; R0 == 0x00?
  121 0000000C         ;    BEQ bothpressed                 ; if so, both switc
                       hes pressed
  122 0000000C         ;    CMP R0, #0x11                   ; R0 == 0x11?
  123 0000000C         ;    BEQ nopressed                   ; if so, neither sw
                       itch pressed
  124 0000000C         ; if none of the above, unexpected return value
  125 0000000C         ;    MOV R0, #(RED+GREEN+BLUE)       ; R0 = (RED|GREEN|B
                       LUE) (all LEDs on)
  126 0000000C         ;    BL  PortF_Output                ; turn all of the L
                       EDs on
  127 0000000C         ;    B   loop
  128 0000000C         ;sw1pressed
  129 0000000C         ;    MOV R0, #BLUE                   ; R0 = BLUE (blue L
                       ED on)
  130 0000000C         ;    BL  PortF_Output                ; turn the blue LED
                        on
  131 0000000C         ;    B   loop
  132 0000000C         ;sw2pressed
  133 0000000C         ;    MOV R0, #RED                    ; R0 = RED (red LED
                        on)
  134 0000000C         ;    BL  PortF_Output                ; turn the red LED 
                       on
  135 0000000C         ;    B   loop
  136 0000000C         ;bothpressed
  137 0000000C         ;    MOV R0, #GREEN                  ; R0 = GREEN (green
                        LED on)
  138 0000000C         ;    BL  PortF_Output                ; turn the green LE



ARM Macro Assembler    Page 5 


                       D on
  139 0000000C         ;    B   loop
  140 0000000C         ;nopressed
  141 0000000C         ;    MOV R0, #0                      ; R0 = 0 (no LEDs o
                       n)
  142 0000000C         ;    BL  PortF_Output                ; turn all of the L
                       EDs off
  143 0000000C E7FA            B                loop
  144 0000000E         
  145 0000000E         ;------------delay------------
  146 0000000E         ; Delay function for testing, which delays about 3*count
                        cycles.
  147 0000000E         ; Input: R0  count
  148 0000000E         ; Output: none
  149 0000000E 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
  150 0000000E 00145855 
                       QUARTERSEC
                               EQU              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
  151 0000000E 001046AA 
                       FIFTHSEC
                               EQU              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
  152 0000000E         delay
  153 0000000E 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  154 00000010 D1FD            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
  155 00000012 4770            BX               LR          ; return
  156 00000014         
  157 00000014         
  158 00000014         ;------------PortF_Init------------
  159 00000014         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  160 00000014         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  161 00000014         ; resistors are enabled, and the NMI functionality on PF
                       0 is
  162 00000014         ; disabled.  Make the RGB LED's pins outputs.
  163 00000014         ; Input: none
  164 00000014         ; Output: none
  165 00000014         ; Modifies: R0, R1, R2
  166 00000014         PortF_Init
  167 00000014 4940            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  168 00000016 6808            LDR              R0, [R1]
  169 00000018 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  170 0000001C 6008            STR              R0, [R1]
  171 0000001E BF00            NOP
  172 00000020 BF00            NOP                          ; allow time for cl
                                                            ock to finish
  173 00000022 493E            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist



ARM Macro Assembler    Page 6 


                                                            er
  174 00000024 483E            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  175 00000026 6008            STR              R0, [R1]
  176 00000028 493E            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  177 0000002A F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  178 0000002E 6008            STR              R0, [R1]
  179 00000030 493D            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  180 00000032 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  181 00000036 6008            STR              R0, [R1]
  182 00000038 493C            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  183 0000003A F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  184 0000003E 6008            STR              R0, [R1]
  185 00000040 493B            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  186 00000042 F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
  187 00000046 6008            STR              R0, [R1]
  188 00000048 493A            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  189 0000004A F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  190 0000004E 6008            STR              R0, [R1]
  191 00000050 4939            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  192 00000052 F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
  193 00000056 6008            STR              R0, [R1]
  194 00000058 4938            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
  195 0000005A F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
  196 0000005E 6008            STR              R0, [R1]
  197 00000060 4770            BX               LR
  198 00000062         
  199 00000062         
  200 00000062         ;------------PortF_Input------------
  201 00000062         ; Read and return the status of the switches.
  202 00000062         ; Input: none
  203 00000062         ; Output: R0  0x01 if only Switch 1 is pressed
  204 00000062         ;         R0  0x10 if only Switch 2 is pressed
  205 00000062         ;         R0  0x00 if both switches are pressed
  206 00000062         ;         R0  0x11 if no switches are pressed
  207 00000062         ; Modifies: R1
  208 00000062         PortF_Input
  209 00000062 4937            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data



ARM Macro Assembler    Page 7 


  210 00000064 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  211 00000066 F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  212 0000006A 4770            BX               LR          ; return R0 with in
                                                            puts
  213 0000006C         
  214 0000006C         ;------------PortF_Output------------
  215 0000006C         ; Set the output state of PF3-1.
  216 0000006C         ; Input: R0  new state of PF
  217 0000006C         ; Output: none
  218 0000006C         ; Modifies: R1
  219 0000006C         PortF_Output
  220 0000006C 4934            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  221 0000006E 6008            STR              R0, [R1]    ; write to PF3-1
  222 00000070 4770            BX               LR
  223 00000072         
  224 00000072         
  225 00000072         ;------------PortD_Init------------
  226 00000072         ; Initialize GPIO Port D for GPIO PD0. Weak internal pul
                       l-up
  227 00000072         ; resistors are enabled.
  228 00000072         ; Input: none
  229 00000072         ; Output: none
  230 00000072         ; Modifies: R0, R1, R2
  231 00000072         PortD_Init
  232 00000072 4929            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t D
  233 00000074 6808            LDR              R0, [R1]
  234 00000076 F040 0008       ORR              R0, R0, #0x08 ; set bit 5 to tu
                                                            rn on clock for Por
                                                            t D
  235 0000007A 6008            STR              R0, [R1]
  236 0000007C BF00            NOP
  237 0000007E BF00            NOP                          ; allow time for cl
                                                            ock to finish
  238 00000080 4930            LDR              R1, =GPIO_PORTD_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  239 00000082 4827            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort D Commit Regist
                                                            er
  240 00000084 6008            STR              R0, [R1]
  241 00000086 4930            LDR              R1, =GPIO_PORTD_CR_R ; enable c
                                                            ommit for Port D
  242 00000088 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
  243 0000008C 6008            STR              R0, [R1]
  244 0000008E 492F            LDR              R1, =GPIO_PORTD_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  245 00000090 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  246 00000094 6008            STR              R0, [R1]
  247 00000096 492E            LDR              R1, =GPIO_PORTD_PCTL_R ; 4) con
                                                            figure as GPIO
  248 00000098 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi



ARM Macro Assembler    Page 8 


                                                            gure Port D as GPIO
                                                            
  249 0000009C 6008            STR              R0, [R1]
  250 0000009E 492D            LDR              R1, =GPIO_PORTD_DIR_R ; 5) set 
                                                            direction register
  251 000000A0 F04F 0001       MOV              R0,#0x01    ; PD0 
  252 000000A4 6008            STR              R0, [R1]
  253 000000A6 492C            LDR              R1, =GPIO_PORTD_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  254 000000A8 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  255 000000AC 6008            STR              R0, [R1]
  256 000000AE 492B            LDR              R1, =GPIO_PORTD_PUR_R ; pull-up
                                                             resistors for PD0
  257 000000B0 F04F 0001       MOV              R0, #0x01   ; enable weak 
  258 000000B4 6008            STR              R0, [R1]
  259 000000B6 492A            LDR              R1, =GPIO_PORTD_DEN_R ; 7) enab
                                                            le Port D digital p
                                                            ort
  260 000000B8 F04F 0001       MOV              R0, #0x01   ; 1 means enable di
                                                            gital I/O
  261 000000BC 6008            STR              R0, [R1]
  262 000000BE 4770            BX               LR
  263 000000C0         
  264 000000C0         ;------------buzzer_pin_toggle------------
  265 000000C0         ; Toggles output state of PD0 to high or low @ 4HZ.
  266 000000C0         ; Input: R0 new state of PD0, R3 frequency
  267 000000C0         ; Output: none
  268 000000C0         ; Modifies: R1
  269 000000C0         buzzer_pin_toggle
  270 000000C0 B500            PUSH             {LR}        ; Push to save the 
                                                            current branch of t
                                                            he link register 
  271 000000C2 F04F 0001       MOV              R0, #0x01   ; Turn ON PD0
  272 000000C6 4927            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  273 000000C8 6008            STR              R0, [R1]    ; write to PD0
  274 000000CA 4827            LDR              R0, =QUARTERSEC ; Toggle @ 4Hz
  275 000000CC F7FF FF9F       BL               delay       ; Branch to delay
  276 000000D0 F04F 0000       MOV              R0, #0x00   ; Turn OFF PD0
  277 000000D4 4923            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  278 000000D6 6008            STR              R0, [R1]    ; write to PD0
  279 000000D8 4823            LDR              R0, =QUARTERSEC ; Toggle @ 4Hz
  280 000000DA F7FF FF98       BL               delay       ; Branch to delay
  281 000000DE F85D EB04       POP              {LR}        ; POP the brach add
                                                            ress from memory
  282 000000E2 4770            BX               LR
  283 000000E4         
  284 000000E4         
  285 000000E4         ;------------buzzer_pin_toggle_wPar------------
  286 000000E4         ; Toggles output state of PD0 as per user provided param
                       ter 
  287 000000E4         ; Input: R0 cycles
  288 000000E4         ; Output: none
  289 000000E4         ; Modifies: R1, R4, R5
  290 000000E4         buzzer_pin_toggle_wPar
  291 000000E4 B500            PUSH             {LR}        ; Save address of t



ARM Macro Assembler    Page 9 


                                                            he main loop
  292 000000E6 4604            MOV              R4, R0      ; Move user paramnt
                                                            er to R4 to for ON 
                                                            delay calculations
  293 000000E8 4605            MOV              R5, R0      ; Move user paramnt
                                                            er to R5 to for OFF
                                                             delay calculations
                                                            
  294 000000EA         My_turnON_delay_loop
  295 000000EA F04F 0001       MOV              R0, #0x01   ; Turn ON PD0
  296 000000EE 491D            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  297 000000F0 6008            STR              R0, [R1]    ; write to PD0
  298 000000F2 F7FF FF8C       BL               delay       ; delay
  299 000000F6 3C01            SUBS             R4, #1      ; Counter decerment
                                                            
  300 000000F8 2C00            CMP              R4, #0      ; Counter comparisi
                                                            on
  301 000000FA D1F6            BNE              My_turnON_delay_loop
  302 000000FC         My_turnOFF_delay_loop
  303 000000FC F04F 0000       MOV              R0, #0x00   ; Turn OFF PD0
  304 00000100 4918            LDR              R1, =GPIO_PORTD_DATA_R ; pointe
                                                            r to Port D data
  305 00000102 6008            STR              R0, [R1]    ; write to PD0 
  306 00000104 F04F 0001       MOV              R0, #0x01   ; R0 back to 1 to d
                                                            elay by 1 cycle
  307 00000108 F7FF FF81       BL               delay       ; delay
  308 0000010C 3D01            SUBS             R5, #1      ; Counter decerment
                                                            
  309 0000010E 2D00            CMP              R5, #0      ; Counter comparisi
                                                            on
  310 00000110 D1F4            BNE              My_turnOFF_delay_loop
  311 00000112 F85D EB04       POP              {LR}
  312 00000116 4770            BX               LR          ; Back to main
  313 00000118         
  314 00000118         
  315 00000118         
  316 00000118         
  317 00000118         
  318 00000118                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  319 00000118                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
              40007520 
              40007524 
              40007528 
              4000752C 
              40007400 



ARM Macro Assembler    Page 10 


              40007420 
              40007510 
              4000751C 
              400073FC 
              00145855 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\_out\main.d -o.\_out\main.o -I.\RTE\_InputOutput -IC:\Keil_v5
\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\LM4F_DF
P\1.0.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 526" --predefine="_RTE_ SETA 1" --predefine="LM4F120 SETA 1" --list=.\m
ain.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 97 in file main.s
   Uses
      None
Comment: .text unused
My_turnOFF_delay_loop 000000FC

Symbol: My_turnOFF_delay_loop
   Definitions
      At line 302 in file main.s
   Uses
      At line 310 in file main.s
Comment: My_turnOFF_delay_loop used once
My_turnON_delay_loop 000000EA

Symbol: My_turnON_delay_loop
   Definitions
      At line 294 in file main.s
   Uses
      At line 301 in file main.s
Comment: My_turnON_delay_loop used once
PortD_Init 00000072

Symbol: PortD_Init
   Definitions
      At line 231 in file main.s
   Uses
      At line 103 in file main.s
Comment: PortD_Init used once
PortF_Init 00000014

Symbol: PortF_Init
   Definitions
      At line 166 in file main.s
   Uses
      None
Comment: PortF_Init unused
PortF_Input 00000062

Symbol: PortF_Input
   Definitions
      At line 208 in file main.s
   Uses
      None
Comment: PortF_Input unused
PortF_Output 0000006C

Symbol: PortF_Output
   Definitions
      At line 219 in file main.s
   Uses
      None
Comment: PortF_Output unused
Start 00000000

Symbol: Start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 101 in file main.s
   Uses
      At line 99 in file main.s
Comment: Start used once
buzzer_pin_toggle 000000C0

Symbol: buzzer_pin_toggle
   Definitions
      At line 269 in file main.s
   Uses
      None
Comment: buzzer_pin_toggle unused
buzzer_pin_toggle_wPar 000000E4

Symbol: buzzer_pin_toggle_wPar
   Definitions
      At line 290 in file main.s
   Uses
      At line 106 in file main.s
Comment: buzzer_pin_toggle_wPar used once
delay 0000000E

Symbol: delay
   Definitions
      At line 152 in file main.s
   Uses
      At line 154 in file main.s
      At line 275 in file main.s
      At line 280 in file main.s
      At line 298 in file main.s
      At line 307 in file main.s

loop 00000004

Symbol: loop
   Definitions
      At line 104 in file main.s
   Uses
      At line 143 in file main.s
Comment: loop used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 90 in file main.s
   Uses
      None
Comment: BLUE unused
FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 151 in file main.s
   Uses
      None
Comment: FIFTHSEC unused
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 88 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTD_AFSEL_R 40007420

Symbol: GPIO_PORTD_AFSEL_R
   Definitions
      At line 77 in file main.s
   Uses
      At line 253 in file main.s
Comment: GPIO_PORTD_AFSEL_R used once
GPIO_PORTD_AMSEL_R 40007528

Symbol: GPIO_PORTD_AMSEL_R
   Definitions
      At line 82 in file main.s
   Uses
      At line 244 in file main.s
Comment: GPIO_PORTD_AMSEL_R used once
GPIO_PORTD_CR_R 40007524

Symbol: GPIO_PORTD_CR_R
   Definitions
      At line 81 in file main.s
   Uses
      At line 241 in file main.s
Comment: GPIO_PORTD_CR_R used once
GPIO_PORTD_DATA_R 400073FC

Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 75 in file main.s
   Uses
      At line 272 in file main.s
      At line 277 in file main.s
      At line 296 in file main.s
      At line 304 in file main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTD_DEN_R 4000751C

Symbol: GPIO_PORTD_DEN_R
   Definitions
      At line 79 in file main.s
   Uses
      At line 259 in file main.s
Comment: GPIO_PORTD_DEN_R used once
GPIO_PORTD_DIR_R 40007400

Symbol: GPIO_PORTD_DIR_R
   Definitions
      At line 76 in file main.s
   Uses
      At line 250 in file main.s
Comment: GPIO_PORTD_DIR_R used once
GPIO_PORTD_LOCK_R 40007520

Symbol: GPIO_PORTD_LOCK_R
   Definitions
      At line 80 in file main.s
   Uses
      At line 238 in file main.s
Comment: GPIO_PORTD_LOCK_R used once
GPIO_PORTD_PCTL_R 4000752C

Symbol: GPIO_PORTD_PCTL_R
   Definitions
      At line 83 in file main.s
   Uses
      At line 247 in file main.s
Comment: GPIO_PORTD_PCTL_R used once
GPIO_PORTD_PUR_R 40007510

Symbol: GPIO_PORTD_PUR_R
   Definitions
      At line 78 in file main.s
   Uses
      At line 256 in file main.s
Comment: GPIO_PORTD_PUR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 66 in file main.s
   Uses
      At line 188 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 71 in file main.s
   Uses
      At line 179 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 70 in file main.s
   Uses
      At line 176 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 64 in file main.s
   Uses
      At line 209 in file main.s
      At line 220 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 68 in file main.s
   Uses
      At line 194 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 65 in file main.s
   Uses
      At line 185 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 69 in file main.s
   Uses
      At line 173 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 72 in file main.s
   Uses
      At line 182 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 67 in file main.s
   Uses
      At line 191 in file main.s
Comment: GPIO_PORTF_PUR_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
      At line 91 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GREEN unused
ONESEC 00516155

Symbol: ONESEC
   Definitions
      At line 149 in file main.s
   Uses
      None
Comment: ONESEC unused
QUARTERSEC 00145855

Symbol: QUARTERSEC
   Definitions
      At line 150 in file main.s
   Uses
      At line 274 in file main.s
      At line 279 in file main.s

RED 00000002

Symbol: RED
   Definitions
      At line 89 in file main.s
   Uses
      None
Comment: RED unused
SW1 00000010

Symbol: SW1
   Definitions
      At line 92 in file main.s
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
      At line 93 in file main.s
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 94 in file main.s
   Uses
      At line 167 in file main.s
      At line 232 in file main.s

28 symbols
377 symbols in table
